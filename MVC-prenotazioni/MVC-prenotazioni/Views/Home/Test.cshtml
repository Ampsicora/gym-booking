@model List<MVC_prenotazioni.Models.booking>

@{
    ViewBag.Title = "Update Bookings";
}
<h2>@ViewBag.Title</h2>
<h3>@ViewBag.Message</h3>


@foreach (var model in @Model)
{ 

using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal col-lg-4">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.Hidden(model.id.ToString())



    <div class="form-group">
        @Html.Label("Room", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.Rooms != null)
            {
                @Html.DropDownList("Rooms", new MultiSelectList(ViewBag.Rooms, "id", "name"))
            }
        </div>
    </div>

    <div class="form-group">
        <label for="day">Date</label>
        <input type="date" name="day" value=@model.date.ToString("yyyy-MM-dd") />
    </div>

    <div class="form-group">
        @Html.Label(model.begin_time.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor(model.begin_time.ToString(), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage(model.begin_time.ToString(), "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(model.end_time.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor(model.end_time.ToString(), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage(model.end_time.ToString(), "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label(model.equipment.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.Editor(model.equipment.ToString())
                @Html.ValidationMessage(model.equipment.ToString(), "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.Label(model.price.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor(model.price.ToString(), new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage(model.price.ToString(), "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }
}
@*<div class="container">

                    @{
                        int limit = 4;
                        int rest = Model.Count % limit;
                        int rows = Model.Count / limit;
                        for (int y = 0; y <= rows; y++)
                        {
                            int to = y == (rows) && rest == 0 ? 0 : y == (rows) ? (limit * y) + rest : 4 + (limit * y);
                            if (to == 0) { return; };
                            <form action="/Home/Update" method="post">
                                <tr>
                                    <th>Room</th>
                                    @for (int z = y * 4; z < to; z++)

                                    {
                                        <td>
                                            <select name="room" />
                                            @if (ViewBag.Rooms != null)
                                            {
                                                foreach (var x in ViewBag.Rooms)
                                                {
                                                    string sel = x.id == Model[z].id_room ? "selected" : "";
                                                    <option @sel value="@x.id">Room @x.id @x.name - Description: @x.description</option>
                                                }

                                            }
                                        </td>
                                        @Html.Hidden("id", @Model[z].id.ToString())
                                    }
                                </tr>
                                <tr>
                                    <th>Date</th>
                                    @for (int z = y * 4; z < to; z++)


                                    {

                                        <td><input type="date" name="day" value="@Model[z].date.ToString("yyyy-MM-dd")" /></td>
                                    }
                                </tr>
                                <tr>
                                    <th>Time</th>
                                    @for (int z = y * 4; z < to; z++)

                                    {

                                        <td>
                                            <input type="time" id="startime" name="start" value="@Model[z].begin_time.ToString()" min="09:00" max="17:30" step="1800" required />
                                            <input type="time" name="endtime" value="@Model[z].end_time.ToString()" min="09:30" max="18:00" step="1800" required />
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <th>Equipment</th>
                                    @for (int z = y * 4; z < to; z++)

                                    {

                                        <td>
                                            <input type="checkbox" value="@Model[z].equipment.ToString()" name="equipment" />
                                            <input type="hidden" value="false" name="equipment" />
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <th>Price to Be Paid</th>
                                    @for (int z = y * 4; z < to; z++)

                                    {

                                        <td>@String.Format("{0:C}", Model[z].price)</td>
                                    }
                                </tr>
                                <tr>
                                    <th>Delete</th>
                                    @for (int z = y * 4; z < to; z++)

                                    {
                                        <td><input type="submit" class="button" name="go" value="GO" /></td>
                                    }
                                </tr>
                            </form>
                        }
                    }
                </table>
            </div>
        </div>
    </div>*@

<h4>booking</h4>
<hr />
